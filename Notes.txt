Blog-App

Git clone the repo first (starter branch)
Git clone â€“single-branch -b starter https://github.com/safak/next-blog.git .
Next do, npm install to install all necessary plugins 
http://localhost:3000 
Created all front ends component using next.js and react
For write functionality in blog to showcase bold, style, options for text used (npm install react-quill)



Once all front end is complete, we install auth js to complete auth format for login/ logout
https://console.cloud.google.com/apis/credentials?project=midyear-grid-452722-s9 
Click on oauth and web application, fill out info
In the web url put local host and redirected one put localhost/api/auth/callback/google
Copy client id & secret (google client id and client secret
Now create auth.js, .env, and route.js. Sould allow you to login via google now.

DATABASE_URL="mongodb+srv://ArajuSharma:<db_password>@cluster0.eoaqh.mongodb.net/blog-app?retryWrites=true&w=majority&appName=Cluster0"

Stacks used : next.js, mongodb, prisma.
Connect prisma to mongodb via 
In prisma to add posts you have to select user and category from list
Issues I struggled with was params for new nextjs ver 13,
I also struggled with slug issues and using param await correctly do it doesnt render the page repeatedly and the importance of clearing cache so it doesnt resender the page over and over again
Server client side difference will use effects and use router
Use SWR instead of usestate or use effect
Npm install swr
For write jsx, use firebase to store pictures messages, and others. 
https://console.firebase.google.com/u/0/project/blog-app-fa076/overview
Create projects, app nickname -> npm install firebase
In utils create firebase.js then paste initialization code
This leads to prisma local host



 Prerequisites:
Install Prisma CLI: Ensure Prisma CLI is installed globally or locally in your project.
Set up a Database: Set up a local database instance (e.g., PostgreSQL, MySQL, SQLite, MongoDB).
Prisma Schema: Create a schema.prisma file to define your data model and database connection.
2. Configure the Connection URL:
Database Connection URL: In the schema.prisma file, the url field specifies how Prisma Client connects to the database. Example (for PostgreSQL):

 prisma
CopyEdit
datasource db {
  provider = "postgresql"
  url      = "postgresql://<user>:<password>@<host>:<port>/<database>?sslmode=disable"
}
 Replace <user>, <password>, <host>, <port>, and <database> with your actual credentials.


Environment Variables: Store sensitive information like passwords in environment variables instead of hardcoding them in the schema file.


3. Run Prisma Studio:
Open your terminal and navigate to the root directory of your Prisma project.
Run the command:
 bash
CopyEdit
npx prisma studio



https://cloud.mongodb.com/v2/67c78d3399808e2b1878fd7a#/metrics/replicaSet/67c78ee85332715e9e35623a/explorer/blog-app/Session/find 
https://console.firebase.google.com/u/0/project/blog-app-fa076/storage/blog-app-fa076.firebasestorage.app/files
Also need to make sure the images on fire base after posting is deleted
Dont forget to add the .eslintrc.json file when uploading to github bc it doesnt save it
{
   "extends": "next/core-web-vitals"
 }
Then install npm install next, the blog should run


